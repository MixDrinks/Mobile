name: Publish production build

on:
  schedule:
    - cron: '0 17 * * 2'
  workflow_dispatch:

jobs:
  prepare_deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: patch
      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
      - name: "Set output"
        id: set-output
        run: |
          echo "mix_drinks_mobile_version_name=${{ steps.bump-semver.outputs.new_version }}" >> $GITHUB_OUTPUT
          mix_drinks_mobile_version_code=$(echo ${{ steps.bump-semver.outputs.new_version }} | sed 's/\.//g' | sed "s/^0*//")
          echo "mix_drinks_mobile_version_code=${mix_drinks_mobile_version_code}" >> $GITHUB_OUTPUT
      - name: "Print output"
        run: |
          echo -e "Version name is: \n ${{ steps.set-output.outputs.mix_drinks_mobile_version_name }}"
          echo -e "Version code is: \n ${{ steps.set-output.outputs.mix_drinks_mobile_version_code }}"
    outputs:
      output_write_mix_drinks_mobile_version_name: ${{ steps.set-output.outputs.mix_drinks_mobile_version_name }}
      output_write_mix_drinks_mobile_version_code: ${{ steps.set-output.outputs.mix_drinks_mobile_version_code }}
  deploy_android:
    needs: [ prepare_deploy ]
    env:
      MIXDRINKS_MOBILE_APP_VERSION_NAME: ${{ needs.prepare_deploy.outputs.output_write_mix_drinks_mobile_version_name }}
      MIXDRINKS_MOBILE_APP_VERSION_CODE: ${{ needs.prepare_deploy.outputs.output_write_mix_drinks_mobile_version_code }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: "Setup Gradle"
        uses: gradle/gradle-build-action@v2

      - name: "Build bundle release"
        run: gradle android:bundleRelease

      - uses: r0adkll/sign-android-release@v1
        name: "Sign app aab file"
        id: sign_app
        with:
          releaseDirectory: androidApp/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.MIXDRINKS_ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.MIXDRINKS_ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.MIXDRINKS_ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.MIXDRINKS_ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      - uses: actions/upload-artifact@v3
        with:
          name: "Upload AAB file as artifact"
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: "Upload to Google Play"
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.MIXDRINKS_ANDROID_DEPLOY_SERVICE_ACCOUNT_JSON }}
          packageName: org.mixdrinks.app
          releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
          track: production
          status: completed

  deploy_ios:
    needs: [ prepare_deploy ]
    env:
      MIXDRINKS_MOBILE_APP_VERSION_NAME: ${{ needs.prepare_deploy.outputs.output_write_mix_drinks_mobile_version_name }}
      MIXDRINKS_MOBILE_APP_VERSION_CODE: ${{ needs.prepare_deploy.outputs.output_write_mix_drinks_mobile_version_code }}
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: "Setup Gradle"
        uses: gradle/gradle-build-action@v2

      - name: "Build xcworkspace"
        run: ./gradlew podInstall

      - name: "Setup app version"
        uses: yanamura/ios-bump-version@v1
        with:
          version: ${{ env.MIXDRINKS_MOBILE_APP_VERSION_NAME }}
          build-number: ${{ env.MIXDRINKS_MOBILE_APP_VERSION_CODE }}
          project-path: iosApp

      - name: "Build IOS App"
        uses: yukiarrr/ios-build-action@v1.9.1
        with:
          project-path: iosApp/iosApp.xcodeproj
          p12-base64: ${{ secrets.MIXDRINKS_IOS_P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.PROD_MIXDRINKS_IOS_BUILD_PROVISION_PROFILE_BASE64 }}
          code-signing-identity: "iPhone Distribution"
          team-id: ${{ secrets.MIXDRINKS_IOS_TEAM_ID }}
          certificate-password: ${{ secrets.MIXDRINKS_IOS_CERTIFICATE_PASSWORD }}
          workspace-path: iosApp/iosApp.xcworkspace
          export-method: "app-store"
      - name: "Upload IPA file as artifact"
        uses: actions/upload-artifact@v3
        with:
          name: IOS IPA
          path: "output.ipa"

      - name: Install private API key P8
        env:
          PRIVATE_API_KEY_BASE64: ${{ secrets.MIXDRINKS_IOS_APPSTORE_API_PRIVATE_KEY }}
          API_KEY: ${{ secrets.MIXDRINKS_IOS_APPSTORE_API_KEY_ID }}
        run: |
          mkdir -p ~/private_keys
          echo -n "$PRIVATE_API_KEY_BASE64" | base64 --decode --output ~/private_keys/AuthKey_$API_KEY.p8

      - name: "Upload IPA file to test flight"
        env:
          API_KEY: ${{ secrets.MIXDRINKS_IOS_APPSTORE_API_KEY_ID }}
          API_ISSUER: ${{ secrets.MIXDRINKS_IOS_APPSTORE_ISSUER_ID  }}
        run: xcrun altool --output-format xml --upload-app -f output.ipa -t ios --apiKey $API_KEY --apiIssuer $API_ISSUER